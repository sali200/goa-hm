<!-- Level 57 -->
<!-- Grid -->

<!-- grid - უფრო დახვეწილი არის და მოქნილი -->

<!-- column (ვერტიკალურად), row (ჰორიზონტალურად)-ში ვამატებთ სხვადასხვა მონაცემს/ელემენტს. შეგვიძლია თთოეული 'უჯრის' ზომა ვაკონტროლოთ. -->
<!-- gap - დაშორება -->

<!-- grid-template-columns: აქ ვწერთ რიცხვებს თითოეული colums ზომას. -->
<!-- grid-template-rows: აქ ვწერთ რიცხვებს თითოეული rows-ის სიმაღლეს. -->

<!-- fr - საზომი ერთეულია და წილადია. -->
<!-- repeat: დამხმარე ფუნქცია რომლითაც შესაძლებელია ერტი და იგივე ზომის რამდენიმე მოქმედების გამეორება. ჯერ ვწერთ რისი გამეორებაც გვინდა. მერე repeat(). შიგნით ჯერ ვწერთ რამდენჯერ და მერე რამდენით.(ზომა) მას აქვს მნიშვნელობა auto-fill რომელიც ავსებს ცარიელ ადგილებს -->

<!-- grid-area: row-start / column-start / row-end / column-end -->

<!-- align-content - ვერტიკალურად განალაგებს კონტენტს  -->
<!-- align-items - თითონ ელემენტებს განალაგებს ვერტიკალურად  -->

<!-- justify-content - ჰორიზონტალურად განალაგებს კონტენტს -->
<!-- justify-items - ჰორიზონტალურად განალაგებს ელემენტებს  -->

<!-- minmax(მინ, მაქს) - გადაეცემა მინიმალური და მაქსიმალური ზომები -->

                   <!-- Grid items -->

<!-- grid-column-start - საიდან დაიწყოს -->
<!-- grid-column-end - სად დამთავრდეს -->
<!-- grid-column - შემოკლებული ვერსია არის და ჯერ ვწერთ საიდან დაიწყოს მერე / და მერე სად დამთავრდეს -->

<!-- grid-row-start - საიდან დაიწყოს ვერტიკალურად -->
<!-- grid-row-end - სად დამთავრდეს ვერტიკალურად -->
<!-- grid-row - შემოკლებული ვერსია არის და ჯერ ვწერთ საიდან დაიწყოს მერე / და მერე სად დამთავრდეს -->